version: '3.8'
services:
  anime-kun-postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: anime_user
      POSTGRES_PASSWORD: anime_password
      POSTGRES_DB: anime_kun
    volumes:
      - db_data:/var/lib/postgresql/data
      # - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    depends_on:
      - anime-kun-postgres
    ports:
      - "3001:3000"
    volumes:
      - ./api:/app
      - uploaded_images:/app/uploads  # Use named volume for persistence
      - /app/node_modules  # Prevent node_modules from being overwritten
    environment:
      - DB_HOST=anime-kun-postgres
      - DB_USER=anime_user
      - DB_PASSWORD=anime_password
      - DB_NAME=anime_kun
      - DB_PORT=5432
      - PORT=3000
      - NODE_ENV=development
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    depends_on:
      - api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Prevent node_modules from being overwritten
      - frontend_build:/app/build  # If you have a build directory to persist
    environment:
      - API_BASE_URL=http://api:3000
      - CHOKIDAR_USEPOLLING=true  # For better file watching in Docker
    restart: unless-stopped

volumes:
  db_data:
    driver: local
  uploaded_images:  # Named volume for uploaded images
    driver: local
  frontend_build:  # Optional: for build artifacts
    driver: local